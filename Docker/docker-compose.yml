services:
  api:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    ports:
      - "${API_PORT}:${API_PORT}"
    environment:
      - APP_ENV=${APP_ENV}
      - HOST=${APP_HOST}
      - PORT=${API_PORT}
      - DEBUG=${APP_DEBUG}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - ../:/app
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    command: uvicorn main:app --reload --host ${APP_HOST} --port ${API_PORT}

  db:
    image: postgres:14
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_PORT=${DB_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:${DB_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management-alpine
    hostname: rabbitmq
    container_name: rabbitmq
    ports:
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"
      - "${RABBITMQ_MANAGEMENT_PORT}:${RABBITMQ_MANAGEMENT_PORT}"
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  maildev:
    image: maildev/maildev
    environment:
      - TZ=${TZ}
      - MAILDEV_WEB_PORT=${MAILDEV_WEB_PORT}
      - MAILDEV_SMTP_PORT=${MAILDEV_SMTP_PORT}
    ports:
      - "${MAILDEV_WEB_EXPOSE_PORT}:${MAILDEV_WEB_PORT}"
      - "${MAILDEV_SMTP_EXPOSE_PORT}:${MAILDEV_SMTP_PORT}"
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

volumes:
  postgres_data:
  rabbitmq-data: